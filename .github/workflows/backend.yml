name: Backend CI/CD

on:
  workflow_dispatch:
  push:
    paths:
      - "backend/**"
      - ".github/workflows/backend.yml"

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  S3_BUCKET:  ${{ secrets.S3_BUCKET_NAME }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build backend image
        run: |
          docker build -t api:latest ./backend
          docker save api:latest | gzip > backend.tar.gz
          ls -lh backend.tar.gz

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}

      - name: Upload artifact to S3
        run: |
          aws s3 cp backend.tar.gz s3://$S3_BUCKET/artifacts/backend.tar.gz --acl private

      - name: Deploy via SSM (no SSH)
        run: |
          CMD_ID=$(aws ssm send-command \
            --instance-ids "${{ secrets.EC2_INSTANCE_ID }}" \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy backend container" \
            --parameters commands='[
              "set -e",
              "which dnf >/dev/null 2>&1 && sudo dnf -y install awscli || sudo yum -y install awscli || true",
              "sudo systemctl start docker || true",
              "aws s3 cp s3://'"$S3_BUCKET"'/artifacts/backend.tar.gz /tmp/backend.tar.gz",
              "sudo docker load -i /tmp/backend.tar.gz",
              "sudo docker rm -f api || true",
              "sudo docker run -d --name api -p 8080:8080 -e DB_HOST=${{ secrets.DB_HOST }} -e DB_USER=${{ secrets.DB_USER }} -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} -e DB_NAME=${{ secrets.DB_NAME }} api:latest"
            ]' \
            --query "Command.CommandId" \
            --output text)
          echo "SSM CommandId: $CMD_ID"
          aws ssm wait command-executed --command-id "$CMD_ID" --instance-id "${{ secrets.EC2_INSTANCE_ID }}"
          echo "SSM deploy finished."
